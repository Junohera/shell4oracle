#!/bin/sh

clear;
. "$(dirname $(realpath $0))/.color.env"

tempfile1="${current_path}/.temp1.sample.sh"
tempfile2="${current_path}/.temp2.sample.sh"


echoBlack ()    { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž   Black ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_BLACK "black") $(ECHO_BLACK_BOLD "blackBold") $(ECHO_BLACK_SINGLE "blackSingle") $(ECHO_BLACK_GLOW "blackGlow") $(ECHO_BLACK_INVERSE "blackInverse") $(ECHO_BLACK_DOUBLE "blackDouble") $(ECHO_BLACK_BLACK "blackBlack") $(ECHO_BLACK_BLACK_BOLD "blackBlackBold") $(ECHO_BLACK_BLACK_SINGLE "blackBlackSingle") $(ECHO_BLACK_BLACK_GLOW "blackBlackGlow") $(ECHO_BLACK_BLACK_INVERSE "blackBlackInverse") $(ECHO_BLACK_BLACK_DOUBLE "blackBlackDouble") $(ECHO_BLACK_RED "blackRed") $(ECHO_BLACK_RED_BOLD "blackRedBold") $(ECHO_BLACK_RED_SINGLE "blackRedSingle") $(ECHO_BLACK_RED_GLOW "blackRedGlow") $(ECHO_BLACK_RED_INVERSE "blackRedInverse") $(ECHO_BLACK_RED_DOUBLE "blackRedDouble") $(ECHO_BLACK_GREEN "blackGreen") $(ECHO_BLACK_GREEN_BOLD "blackGreenBold") $(ECHO_BLACK_GREEN_SINGLE "blackGreenSingle") $(ECHO_BLACK_GREEN_GLOW "blackGreenGlow") $(ECHO_BLACK_GREEN_INVERSE "blackGreenInverse") $(ECHO_BLACK_GREEN_DOUBLE "blackGreenDouble") $(ECHO_BLACK_YELLOW "blackYellow") $(ECHO_BLACK_YELLOW_BOLD "blackYellowBold") $(ECHO_BLACK_YELLOW_SINGLE "blackYellowSingle") $(ECHO_BLACK_YELLOW_GLOW "blackYellowGlow") $(ECHO_BLACK_YELLOW_INVERSE "blackYellowInverse") $(ECHO_BLACK_YELLOW_DOUBLE "blackYellowDouble") $(ECHO_BLACK_BLUE "blackBlue") $(ECHO_BLACK_BLUE_BOLD "blackBlueBold") $(ECHO_BLACK_BLUE_SINGLE "blackBlueSingle") $(ECHO_BLACK_BLUE_GLOW "blackBlueGlow") $(ECHO_BLACK_BLUE_INVERSE "blackBlueInverse") $(ECHO_BLACK_BLUE_DOUBLE "blackBlueDouble") $(ECHO_BLACK_MAGENTA "blackMagenta") $(ECHO_BLACK_MAGENTA_BOLD "blackMagentaBold") $(ECHO_BLACK_MAGENTA_SINGLE "blackMagentaSingle") $(ECHO_BLACK_MAGENTA_GLOW "blackMagentaGlow") $(ECHO_BLACK_MAGENTA_INVERSE "blackMagentaInverse") $(ECHO_BLACK_MAGENTA_DOUBLE "blackMagentaDouble") $(ECHO_BLACK_CYAN "blackCyan") $(ECHO_BLACK_CYAN_BOLD "blackCyanBold") $(ECHO_BLACK_CYAN_SINGLE "blackCyanSingle") $(ECHO_BLACK_CYAN_GLOW "blackCyanGlow") $(ECHO_BLACK_CYAN_INVERSE "blackCyanInverse") $(ECHO_BLACK_CYAN_DOUBLE "blackCyanDouble") $(ECHO_BLACK_WHITE "blackWhite") $(ECHO_BLACK_WHITE_BOLD "blackWhiteBold") $(ECHO_BLACK_WHITE_SINGLE "blackWhiteSingle") $(ECHO_BLACK_WHITE_GLOW "blackWhiteGlow") $(ECHO_BLACK_WHITE_INVERSE "blackWhiteInverse") $(ECHO_BLACK_WHITE_DOUBLE "blackWhiteDouble")"; echo; }
echoRed ()      { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž     Red ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_RED "red") $(ECHO_RED_BOLD "redBold") $(ECHO_RED_SINGLE "redSingle") $(ECHO_RED_GLOW "redGlow") $(ECHO_RED_INVERSE "redInverse") $(ECHO_RED_DOUBLE "redDouble") $(ECHO_RED_BLACK "redBlack") $(ECHO_RED_BLACK_BOLD "redBlackBold") $(ECHO_RED_BLACK_SINGLE "redBlackSingle") $(ECHO_RED_BLACK_GLOW "redBlackGlow") $(ECHO_RED_BLACK_INVERSE "redBlackInverse") $(ECHO_RED_BLACK_DOUBLE "redBlackDouble") $(ECHO_RED_RED "redRed") $(ECHO_RED_RED_BOLD "redRedBold") $(ECHO_RED_RED_SINGLE "redRedSingle") $(ECHO_RED_RED_GLOW "redRedGlow") $(ECHO_RED_RED_INVERSE "redRedInverse") $(ECHO_RED_RED_DOUBLE "redRedDouble") $(ECHO_RED_GREEN "redGreen") $(ECHO_RED_GREEN_BOLD "redGreenBold") $(ECHO_RED_GREEN_SINGLE "redGreenSingle") $(ECHO_RED_GREEN_GLOW "redGreenGlow") $(ECHO_RED_GREEN_INVERSE "redGreenInverse") $(ECHO_RED_GREEN_DOUBLE "redGreenDouble") $(ECHO_RED_YELLOW "redYellow") $(ECHO_RED_YELLOW_BOLD "redYellowBold") $(ECHO_RED_YELLOW_SINGLE "redYellowSingle") $(ECHO_RED_YELLOW_GLOW "redYellowGlow") $(ECHO_RED_YELLOW_INVERSE "redYellowInverse") $(ECHO_RED_YELLOW_DOUBLE "redYellowDouble") $(ECHO_RED_BLUE "redBlue") $(ECHO_RED_BLUE_BOLD "redBlueBold") $(ECHO_RED_BLUE_SINGLE "redBlueSingle") $(ECHO_RED_BLUE_GLOW "redBlueGlow") $(ECHO_RED_BLUE_INVERSE "redBlueInverse") $(ECHO_RED_BLUE_DOUBLE "redBlueDouble") $(ECHO_RED_MAGENTA "redMagenta") $(ECHO_RED_MAGENTA_BOLD "redMagentaBold") $(ECHO_RED_MAGENTA_SINGLE "redMagentaSingle") $(ECHO_RED_MAGENTA_GLOW "redMagentaGlow") $(ECHO_RED_MAGENTA_INVERSE "redMagentaInverse") $(ECHO_RED_MAGENTA_DOUBLE "redMagentaDouble") $(ECHO_RED_CYAN "redCyan") $(ECHO_RED_CYAN_BOLD "redCyanBold") $(ECHO_RED_CYAN_SINGLE "redCyanSingle") $(ECHO_RED_CYAN_GLOW "redCyanGlow") $(ECHO_RED_CYAN_INVERSE "redCyanInverse") $(ECHO_RED_CYAN_DOUBLE "redCyanDouble") $(ECHO_RED_WHITE "redWhite") $(ECHO_RED_WHITE_BOLD "redWhiteBold") $(ECHO_RED_WHITE_SINGLE "redWhiteSingle") $(ECHO_RED_WHITE_GLOW "redWhiteGlow") $(ECHO_RED_WHITE_INVERSE "redWhiteInverse") $(ECHO_RED_WHITE_DOUBLE "redWhiteDouble")"; echo; }
echoGreen ()    { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž   Green ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_GREEN "green") $(ECHO_GREEN_BOLD "greenBold") $(ECHO_GREEN_SINGLE "greenSingle") $(ECHO_GREEN_GLOW "greenGlow") $(ECHO_GREEN_INVERSE "greenInverse") $(ECHO_GREEN_DOUBLE "greenDouble") $(ECHO_GREEN_BLACK "greenBlack") $(ECHO_GREEN_BLACK_BOLD "greenBlackBold") $(ECHO_GREEN_BLACK_SINGLE "greenBlackSingle") $(ECHO_GREEN_BLACK_GLOW "greenBlackGlow") $(ECHO_GREEN_BLACK_INVERSE "greenBlackInverse") $(ECHO_GREEN_BLACK_DOUBLE "greenBlackDouble") $(ECHO_GREEN_RED "greenRed") $(ECHO_GREEN_RED_BOLD "greenRedBold") $(ECHO_GREEN_RED_SINGLE "greenRedSingle") $(ECHO_GREEN_RED_GLOW "greenRedGlow") $(ECHO_GREEN_RED_INVERSE "greenRedInverse") $(ECHO_GREEN_RED_DOUBLE "greenRedDouble") $(ECHO_GREEN_GREEN "greenGreen") $(ECHO_GREEN_GREEN_BOLD "greenGreenBold") $(ECHO_GREEN_GREEN_SINGLE "greenGreenSingle") $(ECHO_GREEN_GREEN_GLOW "greenGreenGlow") $(ECHO_GREEN_GREEN_INVERSE "greenGreenInverse") $(ECHO_GREEN_GREEN_DOUBLE "greenGreenDouble") $(ECHO_GREEN_YELLOW "greenYellow") $(ECHO_GREEN_YELLOW_BOLD "greenYellowBold") $(ECHO_GREEN_YELLOW_SINGLE "greenYellowSingle") $(ECHO_GREEN_YELLOW_GLOW "greenYellowGlow") $(ECHO_GREEN_YELLOW_INVERSE "greenYellowInverse") $(ECHO_GREEN_YELLOW_DOUBLE "greenYellowDouble") $(ECHO_GREEN_BLUE "greenBlue") $(ECHO_GREEN_BLUE_BOLD "greenBlueBold") $(ECHO_GREEN_BLUE_SINGLE "greenBlueSingle") $(ECHO_GREEN_BLUE_GLOW "greenBlueGlow") $(ECHO_GREEN_BLUE_INVERSE "greenBlueInverse") $(ECHO_GREEN_BLUE_DOUBLE "greenBlueDouble") $(ECHO_GREEN_MAGENTA "greenMagenta") $(ECHO_GREEN_MAGENTA_BOLD "greenMagentaBold") $(ECHO_GREEN_MAGENTA_SINGLE "greenMagentaSingle") $(ECHO_GREEN_MAGENTA_GLOW "greenMagentaGlow") $(ECHO_GREEN_MAGENTA_INVERSE "greenMagentaInverse") $(ECHO_GREEN_MAGENTA_DOUBLE "greenMagentaDouble") $(ECHO_GREEN_CYAN "greenCyan") $(ECHO_GREEN_CYAN_BOLD "greenCyanBold") $(ECHO_GREEN_CYAN_SINGLE "greenCyanSingle") $(ECHO_GREEN_CYAN_GLOW "greenCyanGlow") $(ECHO_GREEN_CYAN_INVERSE "greenCyanInverse") $(ECHO_GREEN_CYAN_DOUBLE "greenCyanDouble") $(ECHO_GREEN_WHITE "greenWhite") $(ECHO_GREEN_WHITE_BOLD "greenWhiteBold") $(ECHO_GREEN_WHITE_SINGLE "greenWhiteSingle") $(ECHO_GREEN_WHITE_GLOW "greenWhiteGlow") $(ECHO_GREEN_WHITE_INVERSE "greenWhiteInverse") $(ECHO_GREEN_WHITE_DOUBLE "greenWhiteDouble")"; echo; }
echoYellow ()   { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž  Yellow ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_YELLOW "yellow") $(ECHO_YELLOW_BOLD "yellowBold") $(ECHO_YELLOW_SINGLE "yellowSingle") $(ECHO_YELLOW_GLOW "yellowGlow") $(ECHO_YELLOW_INVERSE "yellowInverse") $(ECHO_YELLOW_DOUBLE "yellowDouble") $(ECHO_YELLOW_BLACK "yellowBlack") $(ECHO_YELLOW_BLACK_BOLD "yellowBlackBold") $(ECHO_YELLOW_BLACK_SINGLE "yellowBlackSingle") $(ECHO_YELLOW_BLACK_GLOW "yellowBlackGlow") $(ECHO_YELLOW_BLACK_INVERSE "yellowBlackInverse") $(ECHO_YELLOW_BLACK_DOUBLE "yellowBlackDouble") $(ECHO_YELLOW_RED "yellowRed") $(ECHO_YELLOW_RED_BOLD "yellowRedBold") $(ECHO_YELLOW_RED_SINGLE "yellowRedSingle") $(ECHO_YELLOW_RED_GLOW "yellowRedGlow") $(ECHO_YELLOW_RED_INVERSE "yellowRedInverse") $(ECHO_YELLOW_RED_DOUBLE "yellowRedDouble") $(ECHO_YELLOW_GREEN "yellowGreen") $(ECHO_YELLOW_GREEN_BOLD "yellowGreenBold") $(ECHO_YELLOW_GREEN_SINGLE "yellowGreenSingle") $(ECHO_YELLOW_GREEN_GLOW "yellowGreenGlow") $(ECHO_YELLOW_GREEN_INVERSE "yellowGreenInverse") $(ECHO_YELLOW_GREEN_DOUBLE "yellowGreenDouble") $(ECHO_YELLOW_YELLOW "yellowYellow") $(ECHO_YELLOW_YELLOW_BOLD "yellowYellowBold") $(ECHO_YELLOW_YELLOW_SINGLE "yellowYellowSingle") $(ECHO_YELLOW_YELLOW_GLOW "yellowYellowGlow") $(ECHO_YELLOW_YELLOW_INVERSE "yellowYellowInverse") $(ECHO_YELLOW_YELLOW_DOUBLE "yellowYellowDouble") $(ECHO_YELLOW_BLUE "yellowBlue") $(ECHO_YELLOW_BLUE_BOLD "yellowBlueBold") $(ECHO_YELLOW_BLUE_SINGLE "yellowBlueSingle") $(ECHO_YELLOW_BLUE_GLOW "yellowBlueGlow") $(ECHO_YELLOW_BLUE_INVERSE "yellowBlueInverse") $(ECHO_YELLOW_BLUE_DOUBLE "yellowBlueDouble") $(ECHO_YELLOW_MAGENTA "yellowMagenta") $(ECHO_YELLOW_MAGENTA_BOLD "yellowMagentaBold") $(ECHO_YELLOW_MAGENTA_SINGLE "yellowMagentaSingle") $(ECHO_YELLOW_MAGENTA_GLOW "yellowMagentaGlow") $(ECHO_YELLOW_MAGENTA_INVERSE "yellowMagentaInverse") $(ECHO_YELLOW_MAGENTA_DOUBLE "yellowMagentaDouble") $(ECHO_YELLOW_CYAN "yellowCyan") $(ECHO_YELLOW_CYAN_BOLD "yellowCyanBold") $(ECHO_YELLOW_CYAN_SINGLE "yellowCyanSingle") $(ECHO_YELLOW_CYAN_GLOW "yellowCyanGlow") $(ECHO_YELLOW_CYAN_INVERSE "yellowCyanInverse") $(ECHO_YELLOW_CYAN_DOUBLE "yellowCyanDouble") $(ECHO_YELLOW_WHITE "yellowWhite") $(ECHO_YELLOW_WHITE_BOLD "yellowWhiteBold") $(ECHO_YELLOW_WHITE_SINGLE "yellowWhiteSingle") $(ECHO_YELLOW_WHITE_GLOW "yellowWhiteGlow") $(ECHO_YELLOW_WHITE_INVERSE "yellowWhiteInverse") $(ECHO_YELLOW_WHITE_DOUBLE "yellowWhiteDouble")"; echo;}
echoBlue ()     { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž    Blue ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_BLUE "blue") $(ECHO_BLUE_BOLD "blueBold") $(ECHO_BLUE_SINGLE "blueSingle") $(ECHO_BLUE_GLOW "blueGlow") $(ECHO_BLUE_INVERSE "blueInverse") $(ECHO_BLUE_DOUBLE "blueDouble") $(ECHO_BLUE_BLACK "blueBlack") $(ECHO_BLUE_BLACK_BOLD "blueBlackBold") $(ECHO_BLUE_BLACK_SINGLE "blueBlackSingle") $(ECHO_BLUE_BLACK_GLOW "blueBlackGlow") $(ECHO_BLUE_BLACK_INVERSE "blueBlackInverse") $(ECHO_BLUE_BLACK_DOUBLE "blueBlackDouble") $(ECHO_BLUE_RED "blueRed") $(ECHO_BLUE_RED_BOLD "blueRedBold") $(ECHO_BLUE_RED_SINGLE "blueRedSingle") $(ECHO_BLUE_RED_GLOW "blueRedGlow") $(ECHO_BLUE_RED_INVERSE "blueRedInverse") $(ECHO_BLUE_RED_DOUBLE "blueRedDouble") $(ECHO_BLUE_GREEN "blueGreen") $(ECHO_BLUE_GREEN_BOLD "blueGreenBold") $(ECHO_BLUE_GREEN_SINGLE "blueGreenSingle") $(ECHO_BLUE_GREEN_GLOW "blueGreenGlow") $(ECHO_BLUE_GREEN_INVERSE "blueGreenInverse") $(ECHO_BLUE_GREEN_DOUBLE "blueGreenDouble") $(ECHO_BLUE_YELLOW "blueYellow") $(ECHO_BLUE_YELLOW_BOLD "blueYellowBold") $(ECHO_BLUE_YELLOW_SINGLE "blueYellowSingle") $(ECHO_BLUE_YELLOW_GLOW "blueYellowGlow") $(ECHO_BLUE_YELLOW_INVERSE "blueYellowInverse") $(ECHO_BLUE_YELLOW_DOUBLE "blueYellowDouble") $(ECHO_BLUE_BLUE "blueBlue") $(ECHO_BLUE_BLUE_BOLD "blueBlueBold") $(ECHO_BLUE_BLUE_SINGLE "blueBlueSingle") $(ECHO_BLUE_BLUE_GLOW "blueBlueGlow") $(ECHO_BLUE_BLUE_INVERSE "blueBlueInverse") $(ECHO_BLUE_BLUE_DOUBLE "blueBlueDouble") $(ECHO_BLUE_MAGENTA "blueMagenta") $(ECHO_BLUE_MAGENTA_BOLD "blueMagentaBold") $(ECHO_BLUE_MAGENTA_SINGLE "blueMagentaSingle") $(ECHO_BLUE_MAGENTA_GLOW "blueMagentaGlow") $(ECHO_BLUE_MAGENTA_INVERSE "blueMagentaInverse") $(ECHO_BLUE_MAGENTA_DOUBLE "blueMagentaDouble") $(ECHO_BLUE_CYAN "blueCyan") $(ECHO_BLUE_CYAN_BOLD "blueCyanBold") $(ECHO_BLUE_CYAN_SINGLE "blueCyanSingle") $(ECHO_BLUE_CYAN_GLOW "blueCyanGlow") $(ECHO_BLUE_CYAN_INVERSE "blueCyanInverse") $(ECHO_BLUE_CYAN_DOUBLE "blueCyanDouble") $(ECHO_BLUE_WHITE "blueWhite") $(ECHO_BLUE_WHITE_BOLD "blueWhiteBold") $(ECHO_BLUE_WHITE_SINGLE "blueWhiteSingle") $(ECHO_BLUE_WHITE_GLOW "blueWhiteGlow") $(ECHO_BLUE_WHITE_INVERSE "blueWhiteInverse") $(ECHO_BLUE_WHITE_DOUBLE "blueWhiteDouble")"; echo; }
echoMagenta ()  { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž Magenta ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_MAGENTA "magenta") $(ECHO_MAGENTA_BOLD "magentaBold") $(ECHO_MAGENTA_SINGLE "magentaSingle") $(ECHO_MAGENTA_GLOW "magentaGlow") $(ECHO_MAGENTA_INVERSE "magentaInverse") $(ECHO_MAGENTA_DOUBLE "magentaDouble") $(ECHO_MAGENTA_BLACK "magentaBlack") $(ECHO_MAGENTA_BLACK_BOLD "magentaBlackBold") $(ECHO_MAGENTA_BLACK_SINGLE "magentaBlackSingle") $(ECHO_MAGENTA_BLACK_GLOW "magentaBlackGlow") $(ECHO_MAGENTA_BLACK_INVERSE "magentaBlackInverse") $(ECHO_MAGENTA_BLACK_DOUBLE "magentaBlackDouble") $(ECHO_MAGENTA_RED "magentaRed") $(ECHO_MAGENTA_RED_BOLD "magentaRedBold") $(ECHO_MAGENTA_RED_SINGLE "magentaRedSingle") $(ECHO_MAGENTA_RED_GLOW "magentaRedGlow") $(ECHO_MAGENTA_RED_INVERSE "magentaRedInverse") $(ECHO_MAGENTA_RED_DOUBLE "magentaRedDouble") $(ECHO_MAGENTA_GREEN "magentaGreen") $(ECHO_MAGENTA_GREEN_BOLD "magentaGreenBold") $(ECHO_MAGENTA_GREEN_SINGLE "magentaGreenSingle") $(ECHO_MAGENTA_GREEN_GLOW "magentaGreenGlow") $(ECHO_MAGENTA_GREEN_INVERSE "magentaGreenInverse") $(ECHO_MAGENTA_GREEN_DOUBLE "magentaGreenDouble") $(ECHO_MAGENTA_YELLOW "magentaYellow") $(ECHO_MAGENTA_YELLOW_BOLD "magentaYellowBold") $(ECHO_MAGENTA_YELLOW_SINGLE "magentaYellowSingle") $(ECHO_MAGENTA_YELLOW_GLOW "magentaYellowGlow") $(ECHO_MAGENTA_YELLOW_INVERSE "magentaYellowInverse") $(ECHO_MAGENTA_YELLOW_DOUBLE "magentaYellowDouble") $(ECHO_MAGENTA_BLUE "magentaBlue") $(ECHO_MAGENTA_BLUE_BOLD "magentaBlueBold") $(ECHO_MAGENTA_BLUE_SINGLE "magentaBlueSingle") $(ECHO_MAGENTA_BLUE_GLOW "magentaBlueGlow") $(ECHO_MAGENTA_BLUE_INVERSE "magentaBlueInverse") $(ECHO_MAGENTA_BLUE_DOUBLE "magentaBlueDouble") $(ECHO_MAGENTA_MAGENTA "magentaMagenta") $(ECHO_MAGENTA_MAGENTA_BOLD "magentaMagentaBold") $(ECHO_MAGENTA_MAGENTA_SINGLE "magentaMagentaSingle") $(ECHO_MAGENTA_MAGENTA_GLOW "magentaMagentaGlow") $(ECHO_MAGENTA_MAGENTA_INVERSE "magentaMagentaInverse") $(ECHO_MAGENTA_MAGENTA_DOUBLE "magentaMagentaDouble") $(ECHO_MAGENTA_CYAN "magentaCyan") $(ECHO_MAGENTA_CYAN_BOLD "magentaCyanBold") $(ECHO_MAGENTA_CYAN_SINGLE "magentaCyanSingle") $(ECHO_MAGENTA_CYAN_GLOW "magentaCyanGlow") $(ECHO_MAGENTA_CYAN_INVERSE "magentaCyanInverse") $(ECHO_MAGENTA_CYAN_DOUBLE "magentaCyanDouble") $(ECHO_MAGENTA_WHITE "magentaWhite") $(ECHO_MAGENTA_WHITE_BOLD "magentaWhiteBold") $(ECHO_MAGENTA_WHITE_SINGLE "magentaWhiteSingle") $(ECHO_MAGENTA_WHITE_GLOW "magentaWhiteGlow") $(ECHO_MAGENTA_WHITE_INVERSE "magentaWhiteInverse") $(ECHO_MAGENTA_WHITE_DOUBLE "magentaWhiteDouble")"; echo; }
echoCyan ()     { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž    Cyan ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_CYAN "cyan") $(ECHO_CYAN_BOLD "cyanBold") $(ECHO_CYAN_SINGLE "cyanSingle") $(ECHO_CYAN_GLOW "cyanGlow") $(ECHO_CYAN_INVERSE "cyanInverse") $(ECHO_CYAN_DOUBLE "cyanDouble") $(ECHO_CYAN_BLACK "cyanBlack") $(ECHO_CYAN_BLACK_BOLD "cyanBlackBold") $(ECHO_CYAN_BLACK_SINGLE "cyanBlackSingle") $(ECHO_CYAN_BLACK_GLOW "cyanBlackGlow") $(ECHO_CYAN_BLACK_INVERSE "cyanBlackInverse") $(ECHO_CYAN_BLACK_DOUBLE "cyanBlackDouble") $(ECHO_CYAN_RED "cyanRed") $(ECHO_CYAN_RED_BOLD "cyanRedBold") $(ECHO_CYAN_RED_SINGLE "cyanRedSingle") $(ECHO_CYAN_RED_GLOW "cyanRedGlow") $(ECHO_CYAN_RED_INVERSE "cyanRedInverse") $(ECHO_CYAN_RED_DOUBLE "cyanRedDouble") $(ECHO_CYAN_GREEN "cyanGreen") $(ECHO_CYAN_GREEN_BOLD "cyanGreenBold") $(ECHO_CYAN_GREEN_SINGLE "cyanGreenSingle") $(ECHO_CYAN_GREEN_GLOW "cyanGreenGlow") $(ECHO_CYAN_GREEN_INVERSE "cyanGreenInverse") $(ECHO_CYAN_GREEN_DOUBLE "cyanGreenDouble") $(ECHO_CYAN_YELLOW "cyanYellow") $(ECHO_CYAN_YELLOW_BOLD "cyanYellowBold") $(ECHO_CYAN_YELLOW_SINGLE "cyanYellowSingle") $(ECHO_CYAN_YELLOW_GLOW "cyanYellowGlow") $(ECHO_CYAN_YELLOW_INVERSE "cyanYellowInverse") $(ECHO_CYAN_YELLOW_DOUBLE "cyanYellowDouble") $(ECHO_CYAN_BLUE "cyanBlue") $(ECHO_CYAN_BLUE_BOLD "cyanBlueBold") $(ECHO_CYAN_BLUE_SINGLE "cyanBlueSingle") $(ECHO_CYAN_BLUE_GLOW "cyanBlueGlow") $(ECHO_CYAN_BLUE_INVERSE "cyanBlueInverse") $(ECHO_CYAN_BLUE_DOUBLE "cyanBlueDouble") $(ECHO_CYAN_MAGENTA "cyanMagenta") $(ECHO_CYAN_MAGENTA_BOLD "cyanMagentaBold") $(ECHO_CYAN_MAGENTA_SINGLE "cyanMagentaSingle") $(ECHO_CYAN_MAGENTA_GLOW "cyanMagentaGlow") $(ECHO_CYAN_MAGENTA_INVERSE "cyanMagentaInverse") $(ECHO_CYAN_MAGENTA_DOUBLE "cyanMagentaDouble") $(ECHO_CYAN_CYAN "cyanCyan") $(ECHO_CYAN_CYAN_BOLD "cyanCyanBold") $(ECHO_CYAN_CYAN_SINGLE "cyanCyanSingle") $(ECHO_CYAN_CYAN_GLOW "cyanCyanGlow") $(ECHO_CYAN_CYAN_INVERSE "cyanCyanInverse") $(ECHO_CYAN_CYAN_DOUBLE "cyanCyanDouble") $(ECHO_CYAN_WHITE "cyanWhite") $(ECHO_CYAN_WHITE_BOLD "cyanWhiteBold") $(ECHO_CYAN_WHITE_SINGLE "cyanWhiteSingle") $(ECHO_CYAN_WHITE_GLOW "cyanWhiteGlow") $(ECHO_CYAN_WHITE_INVERSE "cyanWhiteInverse") $(ECHO_CYAN_WHITE_DOUBLE "cyanWhiteDouble")"; echo; }
echoWhite ()    { echo "ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž   White ðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’ŽðŸ’Ž"; echo -n "$(ECHO_WHITE "white") $(ECHO_WHITE_BOLD "whiteBold") $(ECHO_WHITE_SINGLE "whiteSingle") $(ECHO_WHITE_GLOW "whiteGlow") $(ECHO_WHITE_INVERSE "whiteInverse") $(ECHO_WHITE_DOUBLE "whiteDouble") $(ECHO_WHITE_BLACK "whiteBlack") $(ECHO_WHITE_BLACK_BOLD "whiteBlackBold") $(ECHO_WHITE_BLACK_SINGLE "whiteBlackSingle") $(ECHO_WHITE_BLACK_GLOW "whiteBlackGlow") $(ECHO_WHITE_BLACK_INVERSE "whiteBlackInverse") $(ECHO_WHITE_BLACK_DOUBLE "whiteBlackDouble") $(ECHO_WHITE_RED "whiteRed") $(ECHO_WHITE_RED_BOLD "whiteRedBold") $(ECHO_WHITE_RED_SINGLE "whiteRedSingle") $(ECHO_WHITE_RED_GLOW "whiteRedGlow") $(ECHO_WHITE_RED_INVERSE "whiteRedInverse") $(ECHO_WHITE_RED_DOUBLE "whiteRedDouble") $(ECHO_WHITE_GREEN "whiteGreen") $(ECHO_WHITE_GREEN_BOLD "whiteGreenBold") $(ECHO_WHITE_GREEN_SINGLE "whiteGreenSingle") $(ECHO_WHITE_GREEN_GLOW "whiteGreenGlow") $(ECHO_WHITE_GREEN_INVERSE "whiteGreenInverse") $(ECHO_WHITE_GREEN_DOUBLE "whiteGreenDouble") $(ECHO_WHITE_YELLOW "whiteYellow") $(ECHO_WHITE_YELLOW_BOLD "whiteYellowBold") $(ECHO_WHITE_YELLOW_SINGLE "whiteYellowSingle") $(ECHO_WHITE_YELLOW_GLOW "whiteYellowGlow") $(ECHO_WHITE_YELLOW_INVERSE "whiteYellowInverse") $(ECHO_WHITE_YELLOW_DOUBLE "whiteYellowDouble") $(ECHO_WHITE_BLUE "whiteBlue") $(ECHO_WHITE_BLUE_BOLD "whiteBlueBold") $(ECHO_WHITE_BLUE_SINGLE "whiteBlueSingle") $(ECHO_WHITE_BLUE_GLOW "whiteBlueGlow") $(ECHO_WHITE_BLUE_INVERSE "whiteBlueInverse") $(ECHO_WHITE_BLUE_DOUBLE "whiteBlueDouble") $(ECHO_WHITE_MAGENTA "whiteMagenta") $(ECHO_WHITE_MAGENTA_BOLD "whiteMagentaBold") $(ECHO_WHITE_MAGENTA_SINGLE "whiteMagentaSingle") $(ECHO_WHITE_MAGENTA_GLOW "whiteMagentaGlow") $(ECHO_WHITE_MAGENTA_INVERSE "whiteMagentaInverse") $(ECHO_WHITE_MAGENTA_DOUBLE "whiteMagentaDouble") $(ECHO_WHITE_CYAN "whiteCyan") $(ECHO_WHITE_CYAN_BOLD "whiteCyanBold") $(ECHO_WHITE_CYAN_SINGLE "whiteCyanSingle") $(ECHO_WHITE_CYAN_GLOW "whiteCyanGlow") $(ECHO_WHITE_CYAN_INVERSE "whiteCyanInverse") $(ECHO_WHITE_CYAN_DOUBLE "whiteCyanDouble") $(ECHO_WHITE_WHITE "whiteWhite") $(ECHO_WHITE_WHITE_BOLD "whiteWhiteBold") $(ECHO_WHITE_WHITE_SINGLE "whiteWhiteSingle") $(ECHO_WHITE_WHITE_GLOW "whiteWhiteGlow") $(ECHO_WHITE_WHITE_INVERSE "whiteWhiteInverse") $(ECHO_WHITE_WHITE_DOUBLE "whiteWhiteDouble")"; echo; }

echoBlack
echoRed
echoGreen
echoYellow
echoBlue
echoMagenta
echoCyan
echoWhite
echo "âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨âœ¨"
colors=("Black" "Red" "Green" "Yellow" "Blue" "Magenta" "Cyan" "White")
colors_length=${#colors[@]}
for ((c = 1; c <= ${#colors[@]}; c += 1)); do
  echo "$c ${colors[c-1]}"
done

echo -n "Select Color[1~$(expr $colors_length)]: "
read selectedColor

if [ ${selectedColor} -gt ${colors_length} ]; then
  ECHO_RED_DOUBLE "Selected Color(${selectedColor}) is greather than ${colors_length}."
  exit
fi
if [ ${selectedColor} -le 0 ]; then
  ECHO_BLUE_DOUBLE "Selected Color(${selectedColor}) is less than 0."
  exit
fi

clear
colorIndex=$(expr ${selectedColor} - 1)
color=${colors[colorIndex]}
func="echo${color}"

echo "$($func | tr ' ' '\n' | sed '/^$/d')" > $tempfile1
echo -n $(cat $tempfile1 | head -3)
echo

lines=$(cat $tempfile1 | wc -l)
tail=$(expr $lines - 3)
echo "$(cat $tempfile1 | tail -$tail)" > $tempfile2
cat -n $tempfile2
functions_length=$(cat $tempfile2 | wc -l)
echo "functions_length is ${functions_length}"

echo -n "Select Function[1~$functions_length]: "
read selectedFunction

if [ ${selectedFunction} -gt ${functions_length} ]; then
  ECHO_RED_DOUBLE "Selected Function(${selectedFunction}) is greather than ${functions_length}."
  exit
fi
if [ ${selectedFunction} -le 0 ]; then
  ECHO_BLUE_DOUBLE "Selected Function(${selectedFunction}) is less than 0."
  exit
fi

clear

function_dirty=$(echo -e $(cat $tempfile2 | head -$selectedFunction | tail -1))

to_snake_case=$(echo "$function_dirty" | sed 's/\([a-z]\)\([A-Z]\)/\1_\2/g')
extract_alpha_underscore=$(echo "$to_snake_case" | tr -cd '[:alpha:]_')
strip=$(echo $extract_alpha_underscore | awk '{print substr($0, 2, length($0)-2)}')
to_CONSTANT_CASE=$(echo $strip | tr '[:lower:]' '[:upper:]')

function_name="ECHO_$to_CONSTANT_CASE"
echo "âœ… $function_name"
echo -n "Enter Message: "
read message
$function_name "$message âœ¨"

rm $tempfile1
rm $tempfile2

exit